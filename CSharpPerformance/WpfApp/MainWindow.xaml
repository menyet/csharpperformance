<Window
    x:Class="WpfApp.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:WpfApp"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="MainWindow"
    Width="800"
    Height="450"
    d:DataContext="{d:DesignInstance local:MainViewModel, IsDesignTimeCreatable=False}"
    mc:Ignorable="d">
    <DockPanel LastChildFill="True">
        <Border Height="200" Width="200" DockPanel.Dock="Top">
            <Border x:Name="rect1" RenderTransformOrigin="0.5, 0.5" Height="100" Width="100" HorizontalAlignment="Center" VerticalAlignment="Center" Background="Green">
                <Border.RenderTransform>
                    <!-- giving the transform a name tells the framework not to freeze it -->
                    <RotateTransform x:Name="noFreeze" />
                </Border.RenderTransform>
                <Border.Triggers>
                    <EventTrigger RoutedEvent="Loaded">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetProperty="(Rectangle.RenderTransform).(RotateTransform.Angle)"
                                    To="-360" Duration="0:0:5" RepeatBehavior="Forever" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Border.Triggers>
            </Border>

        </Border>

        <TabControl>

            <TabItem Header="Basic">
                <DockPanel>

                    <UniformGrid Columns="3" DockPanel.Dock="Top">
                        <Button Command="{Binding CpuBoundCommand}">CPU Bound</Button>
                        <Button Command="{Binding IoBoundCommand}">IO</Button>
                        <Button Command="{Binding DeadlockCommand}">Deadlock</Button>
                    </UniformGrid>

                    <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                        <Button Command="{Binding Command2}">Events</Button>
                    </StackPanel>
                </DockPanel>
            </TabItem>

            <TabItem Header="Reactive 1">
                <DockPanel LastChildFill="True">

                    <UniformGrid DockPanel.Dock="Top" Columns="2">
                        <Button Command="{Binding ReactiveViewModel.GenerateValue}"></Button>
                        <ToggleButton DockPanel.Dock="Top" IsChecked="{Binding ReactiveViewModel.IsSubscribed}">Subscription active</ToggleButton>
                    </UniformGrid>

                    

                    <ListBox ItemsSource="{Binding ReactiveViewModel.Values}">

                    </ListBox>
                </DockPanel>
            </TabItem>

            <TabItem Header="Reactive 1">
                <DockPanel LastChildFill="True">

                    <UniformGrid DockPanel.Dock="Top" Columns="2">
                        <Button Command="{Binding ReactiveViewModel.GenerateValue}"></Button>
                        <ToggleButton DockPanel.Dock="Top" IsChecked="{Binding ReactiveViewModel.IsSubscribed}">Subscription active</ToggleButton>
                    </UniformGrid>



                    <ListBox ItemsSource="{Binding ReactiveViewModel.Values}">

                    </ListBox>
                </DockPanel>
            </TabItem>

            <TabItem Header="Memory leak">
                <DockPanel LastChildFill="True">

                    <UniformGrid DockPanel.Dock="Top" Columns="2">
                        <ComboBox ItemsSource="{Binding MemoryLeakViewModel.Channels}" SelectedValue="{Binding MemoryLeakViewModel.SelectedChannel}"></ComboBox>
                    </UniformGrid>

                    <ItemsControl ItemsSource="{Binding MemoryLeakViewModel.Ticks}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="{x:Type local:TickViewModel}">
                                <TextBlock Text="{Binding Value}"/> 
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </DockPanel>
            </TabItem>

        </TabControl>


    </DockPanel>
</Window>
